:put (",ntf,,enable,")

:local userComment [/ip hotspot user get [find where name="$user"] comment]

# âœ… Lewati jika sudah ada comment yang berisi "exp:"
:if ([:pick $userComment 0 4] != "exp:") do={

  :local curDate [/system clock get date]   ;# format: jun/07/2025
  :local curTime [/system clock get time]   ;# format: 07:40:02

  # Tambahkan scheduler sebagai placeholder expired
  /system scheduler add name="exp-$user" interval=1d start-date=$curDate start-time=$curTime on-event=":log info expired-$user" comment="temp"

  # Ambil scheduler `next-run` pakai polling (maks 5 detik)
  :local expireTime ""
  :local count 0
  :do {
    :set expireTime [/system scheduler get [find where name="exp-$user"] next-run]
    :if ($expireTime != "") do={ :set count 99 } else={ :delay 1s }
    :set count ($count + 1)
  } while=($count < 5)

  # Format ulang next-run menjadi "exp:DD/MM/YYYY HH:MM"
  :if ($expireTime != "") do={

    # Contoh hasil: "jun/08/2025 07:40:00"
    :local rawDate [:pick $expireTime 0 11]
    :local rawTime [:pick $expireTime 12 17]

    :local day [:pick $rawDate 4 6]
    :local monthStr [:pick $rawDate 0 3]
    :local year [:pick $rawDate 7 11]

    # Konversi month ke angka
    :local monthArray {"jan"=1;"feb"=2;"mar"=3;"apr"=4;"may"=5;"jun"=6;"jul"=7;"aug"=8;"sep"=9;"oct"=10;"nov"=11;"dec"=12}
    :local monthNum ($monthArray->$monthStr)
    :if ([:len $monthNum] = 1) do={ :set monthNum ("0" . $monthNum) }

    :local formattedDate ("exp:" . $day . "/" . $monthNum . "/" . $year . " " . $rawTime)

    # Set comment user dengan format yang dikenali auto-kick script
    /ip hotspot user set [find where name="$user"] comment=$formattedDate
  }

  # Hapus scheduler setelah selesai
  /system scheduler remove [find where name="exp-$user"]
}
